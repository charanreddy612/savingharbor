---
import Base from "../layouts/Base.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import CardStore from "../components/CardStore.astro";
import FAQAccordion from "../components/FAQAccordion.jsx";

const pageMeta = {
  title: "Halloween Coupons 2025: Best Promo Codes, Deals & Spooky Offers",
  description:
    "Unlock the best Halloween coupons and promo codes for 2025—grab exclusive deals on costumes, party supplies, decorations, and treats from top stores! Save big on this year's spookiest shopping essentials. Get instant access to limited-time Halloween sales, verified discount codes, and special spooky offers to make your celebration unforgettable. Update daily for hottest deals.",
};

const shortDescription =
  "Halloween 2025 is creeping closer, and it’s the perfect time to grab spooky savings! Whether you’re hunting for the best costume deals, eerie decorations, or party supplies, we’ve gathered the top verified Halloween coupons and promo codes to make your celebration affordable and unforgettable. Browse this guide for exclusive offers, trending items, and real-time updates from your favorite brands — all curated by SavingHarbor.";

const conclusion =
  "Halloween only comes once a year — make the most of it! Keep checking back at SavingHarbor for fresh codes and flash offers as new discounts drop daily through October 31st. From costumes to candy, every little saving makes your Halloween extra sweet.";

// Example FAQ list (replaceable with server-provided data if needed)
const faqs = [
  {
    question: "What are the best Halloween coupons available right now?",
    answer:
      "Find verified 2025 Halloween coupons for costumes, decor, treats, and party supplies, updated daily for maximum savings.",
  },
  {
    question:
      "Which stores are offering exclusive Halloween promo codes in 2025?",
    answer:
      "Top stores like Spirit Halloween, Amazon, Walmart, and Target feature exclusive promo codes for Halloween shopping this year.",
  },
  // ... add all 20 FAQs here
];

// Fetch seasonal stores
let stores = [];
try {
  const res = await fetch(`${Astro.site}/api/stores?season=halloween`);
  if (res.ok) stores = await res.json();
} catch (e) {
  stores = [];
}
---

<Base meta={pageMeta}>
  <Header />

  <main id="content" role="main" class="container mx-auto px-4 py-10 relative">
    <!-- Hero Section -->
    <header class="mb-12 relative flex flex-col md:flex-row items-center gap-6">
      <img
        src="/assets/halloween-hero.webp"
        alt="Halloween pumpkins and deals"
        width="1280"
        height="880"
        loading="lazy"
        decoding="async"
        class="halloween-hero-img animate-flicker w-full md:w-1/2 rounded-lg shadow-lg"
      />
      <div class="md:flex-1">
        <span
          class="inline-block px-3 py-1 rounded-full bg-orange-800 text-orange-100 font-bold text-sm mb-2"
        >
          Halloween 2025
        </span>
        <h1 class="halloween-hero-heading text-3xl md:text-4xl mb-3">
          Spooky-good Halloween Deals & Coupons
        </h1>
        <p class="halloween-hero-subtext mb-4">{shortDescription}</p>
        <a
          href="/coupons?q=halloween"
          class="halloween-btn inline-block glow"
          aria-label="Browse Halloween coupons"
        >
          Browse Halloween Coupons
        </a>
      </div>
    </header>

    <!-- Stores Section -->
    <section aria-labelledby="halloween-stores" class="mt-8">
      <h2 class="text-2xl font-bold text-orange-400 mb-4">Halloween Stores</h2>
      {
        stores.length > 0 ? (
          <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6">
            {stores.map((store: any) => (
              <div
                class="rounded-md bg-gray-900/5 p-3 transition-shadow hover:shadow-store-card"
                style="border-top-width: 3px; border-top-style: solid; border-top-color: transparent;"
              >
                <CardStore store={store} />
              </div>
            ))}
          </div>
        ) : (
          <p class="text-gray-500">No stores found for Halloween.</p>
        )
      }
    </section>

    <!-- Conclusion -->
    <section class="mt-10 prose text-orange-100">
      <p>{conclusion}</p>
    </section>

    <!-- FAQ Accordion -->
    <section class="mt-12">
      <h2 class="text-2xl font-bold mb-4">Halloween — FAQs</h2>
      <FAQAccordion
        client:idle
        faqs={faqs}
        defaultOpen={null}
        idPrefix="halloween-faq"
      />
    </section>

    <!-- Floating Bat Swarm -->
    <div
      aria-hidden="true"
      id="bat-swarm"
      class="fixed top-0 left-0 w-full h-full pointer-events-none"
      style="z-index:9999"
    >
    </div>

    <script>
      (function () {
        const batImages = [
          "/assets/bat1.png",
          "/assets/bat2.png",
          "/assets/bat3.png",
          "/assets/bat4.png",
          "/assets/bat5.png",
        ];
        const batContainer = document.getElementById("bat-swarm");

        function createInlineSVGBat() {
          return (
            "data:image/svg+xml;utf8," +
            encodeURIComponent(
              `<svg xmlns="http://www.w3.org/2000/svg" width="128" height="64" viewBox="0 0 128 64"><path fill="#000" d="M0 32c20-10 30-20 48-10 18 10 30 10 48 0 18-10 28 0 32 10v22H0z"/></svg>`
            )
          );
        }

        async function findAvailable(srcs: string []) {
          for (const s of srcs) {
            try {
              const res = await fetch(s, { method: "HEAD" });
              if (res.ok) return srcs;
            } catch {}
          }
          return [createInlineSVGBat()];
        }

        window.addEventListener("load", async () => {
          const sources = await findAvailable(batImages);
          const SWARM_COUNT = 18;
          for (let i = 0; i < SWARM_COUNT; i++) {
            const bat = document.createElement("img");
            bat.src = sources[i % sources.length];
            bat.alt = "bat";
            bat.className = "absolute animate-bat-fly";
            const top = Math.random() * 80 + 5;
            const leftOffset = Math.random() * 30 + 1;
            const size = Math.round(Math.random() * 48 + 24);
            const opacity = (Math.random() * 0.45 + 0.25).toFixed(2);
            const duration = (Math.random() * 10 + 8).toFixed(2);
            const delay = (Math.random() * -duration).toFixed(2);

            bat.style.top = top + "%";
            bat.style.left = "-" + leftOffset + "%";
            bat.style.width = size + "px";
            bat.style.opacity = opacity;
            bat.style.animationDuration = duration + "s";
            bat.style.animationDelay = delay + "s";
            bat.style.transform = `rotate(${Math.random() * 40 - 20}deg)`;
            bat.style.setProperty(
              "--start-rotation",
              Math.random() * 40 - 20 + "deg"
            );
            bat.style.setProperty(
              "--mid-rotation",
              Math.random() * 40 - 20 + "deg"
            );
            bat.style.setProperty(
              "--end-rotation",
              Math.random() * 40 - 20 + "deg"
            );

            batContainer?.appendChild(bat);
          }
        });
      })();
    </script>
  </main>

  <Footer />
</Base>

<style>
  /* Keep all original Halloween CSS unchanged */
  body,
  main {
    background: linear-gradient(180deg, #1a1a1a 0%, #2e1a1a 100%);
  }
  @keyframes flicker {
    0%,
    19%,
    21%,
    23%,
    25%,
    54%,
    56%,
    100% {
      opacity: 1;
    }
    20%,
    22%,
    24%,
    55% {
      opacity: 0.7;
    }
  }
  .animate-flicker {
    animation: flicker 3s linear infinite;
  }
  #bat-swarm {
    z-index: 9999;
    pointer-events: none;
  }
  @keyframes bat-fly {
    0% {
      transform: translateX(0) translateY(0) rotate(var(--start-rotation, 0deg));
    }
    50% {
      transform: translateX(120vw) translateY(-8vh)
        rotate(var(--mid-rotation, 0deg));
    }
    100% {
      transform: translateX(220vw) translateY(0)
        rotate(var(--end-rotation, 0deg));
    }
  }
  .animate-bat-fly {
    animation: bat-fly linear infinite;
  }
</style>
