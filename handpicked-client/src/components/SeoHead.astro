---
const props = Astro.props as any;
const meta = (props && props.meta) || {};

const siteName = "Saving Harbor";

// utility: returns "{Mon, YYYY}"
function getCurrentMonthYear() {
  const now = new Date();
  const month = now.toLocaleString("en-US", { month: "short" }); // e.g. "Sep"
  const year = now.getFullYear(); // e.g. 2025
  return `- ${month}, ${year}`;
}

// detect existing suffix like "{Sep, 2025}" (basic but reliable)
function hasMonthYearSuffix(text: string) {
  if (!text || typeof text !== "string") return false;
  return /\{\s*[A-Za-z]{3},\s*\d{4}\s*\}$/.test(text.trim());
}

const suffix = getCurrentMonthYear();

// base values (before suffix)
const rawTitle =
  meta.title || "Saving Harbor Deals | Verified Coupons & Discounts";
const rawDesc =
  meta.description ||
  "Verified coupons, real savings, no expired junk â€” handpicked by real humans.";

// append suffix if not already present
const defaultTitle = hasMonthYearSuffix(rawTitle)
  ? rawTitle
  : `${rawTitle} ${suffix}`;

const defaultDesc = hasMonthYearSuffix(rawDesc)
  ? rawDesc
  : `${rawDesc} ${suffix}`;

const canonical = meta.canonical;
const ogImage = meta.og_image || "/og-default.png";
const jsonld = meta.jsonld;
const GA_ID = import.meta.env.PUBLIC_GA_ID || "G-Q01DFD4F4C";
---

<head>
  {GA_ID && (
    <>
      <!-- Load gtag -->
      <script async src={`https://www.googletagmanager.com/gtag/js?id=${GA_ID}`}></script>

      <!-- Init gtag (rendered as literal client-side JS) -->
      <script set:html={`
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', '${GA_ID}');
      `} />
    </>
  )}
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>{defaultTitle}</title>
  <meta name="description" content={defaultDesc} />
  {canonical && <link rel="canonical" href={canonical} />}

  <!-- Open Graph -->
  <meta property="og:type" content="website" />
  {defaultTitle && <meta property="og:title" content={defaultTitle} />}
  {defaultDesc && <meta property="og:description" content={defaultDesc} />}
  {canonical && <meta property="og:url" content={canonical} />}
  <meta property="og:image" content={ogImage} />
  <meta property="og:image:width" content="1200" />
  <meta property="og:image:height" content="630" />

  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image" />
  {defaultTitle && <meta name="twitter:title" content={defaultTitle} />}
  {defaultDesc && <meta name="twitter:description" content={defaultDesc} />}
  <meta name="twitter:image" content={ogImage} />
  {
    meta.preloadHero && meta.heroSrc ? (
      <>
        <link
          rel="preload"
          as="image"
          href={meta.heroSrc}
          imagesrcset={meta.heroSrcSetAvif}
          imagesizes="(max-width: 640px) 100vw, 1200px"
          type="image/avif"
          fetchpriority="high"
        />
        <link
          rel="preload"
          as="image"
          href={meta.heroSrc.replace(".avif", ".webp")}
          imagesrcset={meta.heroSrcSetWebp}
          imagesizes="(max-width: 640px) 100vw, 1200px"
          type="image/webp"
          fetchpriority="high"
        />
      </>
    ) : null
  }
  <link
    rel="preload"
    href="/fonts/Inter-Regular.woff2"
    as="font"
    type="font/woff2"
    crossorigin
  />
  {
    jsonld && (
      <script type="application/ld+json" set:html={JSON.stringify(jsonld)} />
    )
  }
</head>
